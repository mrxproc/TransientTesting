<section xmlns="http://docbook.org/ns/docbook" xmlns:p="http://www.w3.org/ns/xproc"
  xmlns:e="http://www.w3.org/1999/XSL/Spec/ElementSyntax" xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="c.unarchive">

  <title>p:unarchive</title>

  <para>The <code>p:unarchive</code> step outputs on its <port>result</port> port specific entries
    in an archive (for instance from a zip file).</para>

  <p:declare-step type="p:unarchive">
    <p:input port="source" primary="true" content-types="any" sequence="false"/>
    <p:output port="result" primary="true" content-types="any" sequence="true"/>
    <p:option name="include-filter" as="xs:string*" e:type="RegularExpression"/>
    <p:option name="exclude-filter" as="xs:string*" e:type="RegularExpression"/>
    <p:option name="format" as="xs:QName?"/>
    <p:option name="parameters" as="map(xs:QName, item()*)?"/>
    <p:option name="relative-to" as="xs:anyURI?"/>
    <p:option name="override-content-types" as="array(array(xs:string))?"/>
  </p:declare-step>

  <para>The meaning and interpretation of the <code>p:unarchive</code> step's options is as
    follows:</para>

  <itemizedlist>
    <listitem>
      <para>The format of the archive is determined as follows:</para>
      <itemizedlist>
        <listitem>
          <para>If the <option>format</option> option is specified, this determines the format of
            the archive. Implementations <rfc2119>must</rfc2119> support the <biblioref
              linkend="zip"/> format, specified with the value <code>zip</code>. <impl>It is
                <glossterm>implementation-defined</glossterm> what other formats are
              supported.</impl></para>
        </listitem>
        <listitem>
          <para>If no <option>format</option> option is specified or if its value is the empty
            sequence, the archive's format will be determined by the step, using the
              <code>content-type</code> document-property of the document on the <port>source</port>
            port and/or by inspecting its contents. <impl>It is
                <glossterm>implementation-defined</glossterm> how the step determines the archive's
              format.</impl> Implementations <rfc2119>should</rfc2119> recognize archives in
              <biblioref linkend="zip"/> format. </para>
        </listitem>
        <listitem><para><error code="C0085">It is a <glossterm>dynamic error</glossterm> if the format of the archive 
          does not match the specified format, cannot be understood, determined and/or processed.</error></para>
        </listitem>
      </itemizedlist>
    </listitem>
    <listitem>
      <para>The <option>parameters</option> option can be used to supply parameters to control the
        unarchiving. <impl>The semantics of the keys and the allowed values for these keys are
            <glossterm>implementation-defined</glossterm>.</impl>
        <error code="C0079">It is a <glossterm>dynamic error</glossterm> if the map
            <option>parameters</option> contains an entry whose key is defined by the implementation
          and whose value is not valid for that key.</error></para>
    </listitem>
    <listitem>
      <para>If present, the value of the <option>include-filter</option> or
          <option>exclude-filter</option> option <rfc2119>must</rfc2119> be a sequence of strings,
        each one representing a regular expressions as specified in <biblioref
          linkend="xpath31-functions"/>, section 7.61 “<literal>Regular Expression
            Syntax</literal>”. <error code="C0147">It is a <glossterm>dynamic
              error</glossterm> if a specified value is not a valid XPath regular
              expression.</error></para>

      <para>If neither the <option>include-filter</option> option nor the
          <option>exclude-filter</option> option is specified, the <code>p:unarchive</code> step
        outputs on its <port>result</port> port all entries in the archive.</para>

      <para>If the <option>include-filter</option> option or the <option>exclude-filter</option>
        option is specified, the <code>p:archive</code> step outputs on the <port>result</port> port
        the entries from the archive that conform to the following rules:</para>
      <itemizedlist>
        <listitem>
          <para>If any <option>include-filter</option> pattern matches an archive entry's name, the
            entry is included in the output.</para>
        </listitem>
        <listitem>
          <para>If any <option>exclude-filter</option> pattern matches an archive entry's name, the
            entry is excluded in the output.</para>
        </listitem>
        <listitem>
          <para>If both options are provided, the include filter is processed first, then the
            exclude filter. </para>
        </listitem>
        <listitem>
          <para>Names of entries in archives are always relative names. For instance, the name of a
            file called <code>xyz.xml</code> in a <code>specs</code> subdirectory in an archive is
            called in full <code>specs/xyz.xml</code> (and not <code>/specs/xyz.xml</code>).</para>
        </listitem>
      </itemizedlist>
      <para>As a result: an item is included if it matches (at least) one of the
          <option>include-filter</option> values and none of the <option>exclude-filter</option>
        values.</para>
      <para>The regular expressions specified in the <option>include-filter</option> and
          <option>exclude-filter</option> options will be matched against the path of the entry
          <emphasis>in</emphasis> the archive. The matching is done unanchored: it is a match if the
        regular expression matches part of the entry's path. Informally: matching behaves like
        applying the XPath <code>matches#2</code> function, like in <code>matches($path-in-archive,
          $regular-expression)</code>.</para>
      <note>
        <para>Depending on how archives are constructed, the path of an entry in an archive can be
          with or without a leading slash. Usually it will be without. For archives constructed by
            <tag>p:archive</tag> no leading slash will be present.</para>
      </note>
    </listitem>
    <listitem>
      <para>The <option>relative-to</option> option, when present, is used in creating the base URI
        of the unarchived documents. If the option is relative, it is made absolute against the
        base URI of the element on which it is specified (<tag>p:with-option</tag> or the step in
        case of a syntactic shortcut value).</para>
    </listitem>
    <listitem>
      <para>The <option>override-content-types</option> option can be used to partially override the
        content-type determination mechanism, as described in <xref linkend="override-content-type"/>.</para>
    </listitem>
  </itemizedlist>

  <para>The base URI of an unarchived document appearing on the <port>result</port> port is: </para>
  <itemizedlist>
    <listitem>
      <para>If the <option>relative-to</option> option is present: Function <code>p:urify()</code> is
        called with the value of this option as second parameter (<code>$basedir</code>) and
        with the relative path of this document as it was in the archive as first parameter</para>
    </listitem>
    <listitem>
      <para>If the <option>relative-to</option> option is <emphasis>not</emphasis> present: Function
        <code>p:urify()</code>is called with the
        value of the base URI of the archive appended with a “<literal>/</literal>” as second
        parameter (<code>$baseDir</code>) and the relative path of this document as it
        was in the archive as first parameter</para>
    </listitem>
  </itemizedlist>
  
  <para><error code="C0120">It is a <glossterm>dynamic error</glossterm> if the 
    <option>relative-to</option> option is not present and the document on the 
    <port>source</port> port does not have a base URI.</error>
    <error code="D0064">It is a <glossterm>dynamic
    error</glossterm> if the option is not a valid URI according to <biblioref linkend="rfc3986"/>.</error></para>
  
  <para>For instance, the base URI of an unarchived file called <code>xyz.xml</code> that resided in
    the <code>specs</code> subdirectory in an archive with base URI <code>file:///a/b/c.zip</code>
    will become: </para>
  <itemizedlist>
    <listitem>
      <para>With the <option>relative-to</option> option set to <code>file:///x/y/z</code>:
          <code>file:///x/y/z/specs/xyz.xml</code></para>
    </listitem>
    <listitem>
      <para>Without a <option>relative-to</option> option set:
          <code>file:///a/b/c.zip/specs/xyz.xml</code></para>
    </listitem>
  </itemizedlist>
  
  <simplesect>
    <title>Document properties</title>
    <para feature="unarchive-preserves-none">No document properties are preserved.
The <property>base-uri</property> property of each unarchived document is reflective of
the base URI of the document.
</para>
  </simplesect>
</section>
